string(TOUPPER "${CMAKE_BUILD_TYPE}" BUILD_TYPE_u)

message(STATUS "")
message(STATUS "BUILD SUMMARY")
message(STATUS "  CMAKE_GENERATOR       : ${CMAKE_GENERATOR}")
message(STATUS "  C Compiler            : ${CMAKE_C_COMPILER} (${CMAKE_C_COMPILER_ID})")
message(STATUS "  C++ Compiler          : ${CMAKE_CXX_COMPILER} (${CMAKE_CXX_COMPILER_ID})")
message(STATUS "  Build type            : ${CMAKE_BUILD_TYPE}")
message(STATUS "  Build tests           : ${BUILD_TESTING}")
if(BUILD_BENCH AND EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/benchmark/CMakeLists.txt")
    message(STATUS "  Build benchmarks      : ${BUILD_BENCH}")
endif()
if(BUILD_EXAMPLES AND EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/examples/CMakeLists.txt")
    message(STATUS "  Build examples        : ${BUILD_EXAMPLES}")
endif()
message(STATUS "  Test coverage         : ${COVERAGE}")
message(STATUS "  Sanitizer             : ${SANITIZER}")
message(STATUS "")
message(STATUS "  Install prefix : ${CMAKE_INSTALL_PREFIX}")
message(STATUS "  Binary dir     : ${BINDIR}")
message(STATUS "  Lib dir        : ${LIBDIR}")
# message(STATUS "") message(STATUS "CMAKE_CXX_FLAGS            :
# ${CMAKE_CXX_FLAGS_${BUILD_TYPE_u}}") message(STATUS "CMAKE_C_FLAGS              :
# ${CMAKE_C_FLAGS_${BUILD_TYPE_u}}") message(STATUS "CMAKE_SHARED_LINKER_FLAGS  :
# ${CMAKE_SHARED_LINKER_FLAGS_${BUILD_TYPE_u}}") message(STATUS "CMAKE_EXE_LINKER_FLAGS     :
# ${CMAKE_EXE_LINKER_FLAGS_${BUILD_TYPE_u}}")
if(PROFILE_LIB)
    message(STATUS "")
    message(STATUS "PROFILE_LIB                : ${PROFILE_LIB}")
endif()
if(LINK_STDLIB)
    message(STATUS "STDLIB                     : ${LINK_STDLIB}")
endif()

set(_OPTION_WARN "option require as root build (not a subdirectory).")
if(NOT CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
    if(PROFILE)
        message(AUTHOR_WARNING "PROFILE ${_OPTION_WARN}")
    endif()
    if(SANITIZER)
        message(AUTHOR_WARNING "SANITIZER ${_OPTION_WARN}")
    endif()
    if(COVERAGE)
        message(AUTHOR_WARNING "COVERAGE ${_OPTION_WARN}")
    endif()
endif()
